# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - uses: actions/cache@v2
      with:
        # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      
      
    - name: Install dependencies
      run: |
        if [ -e yarn.lock ]; then
        yarn install --frozen-lockfile
        elif [ -e package-lock.json ]; then
        npm ci
        else
        npm i
        fi

    - name: Build my App  
      run: npm run build
      env:
        NEXT_PUBLIC_BASE_PATH: /mlaajaj.github.io
        
    - run: npm run export
      env:
        NEXT_PUBLIC_BASE_PATH: /mlaajaj.github.io
        
    - run: touch ./out/.nojekyll
    
    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@3.5.9
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: out # The folder the action should deploy.
        

