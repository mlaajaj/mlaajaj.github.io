{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      a: \"a\",\n      blockquote: \"blockquote\",\n      ol: \"ol\",\n      li: \"li\",\n      ul: \"ul\",\n      pre: \"pre\",\n      code: \"code\",\n      br: \"br\",\n      h4: \"h4\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(\"img\", {\n        src: \"https://cdn.thenewstack.io/media/2021/11/28de6660-screen-shot-2021-11-29-at-6.46.11-am.png\",\n        alt: \"alt text\",\n        title: \"image Title\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Cet article détaille les étapes de création d'une application avec Streamlit depuis la récupération des données jusqu'au déploiement.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Streamlit ?\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          href: \"https://streamlit.io\",\n          children: \"Streamlit\"\n        }), \" est un framework open-source Python conçu pour créer des web applications en quelques minutes. La particuliratié de cet outil est qu'il permet de créer des \\\"data apps\\\" sans connaissances prélables en front-end.\"]\n      }), \"\\n\", _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.a, {\n            href: \"https://www.informatiquenews.fr/snowflake-annonce-lacquisition-de-streamlit-86161\",\n            children: \"Snowflake a recemment annoncé l’acquisition de Streamlit pour 800 millions de dollars\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Organisation du projet\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Le projet se déroule via 4 étapes :\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Récupération des données\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Traitement et modélisation\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Utilisation de l'API Streamlit pour créer notre Web App\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Déploiement\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Les données\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"J'ai choisi de scrapper les données de test des smartphones du site \", _jsx(_components.a, {\n          href: \"'https://www.notebookcheck.net'\",\n          children: \"Notebookcheck\"\n        }), \".\\nPour chaque test de smartphone, les éléments suivants ont été rédupérées:\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Marque du smartphone\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Modele\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"L'ensmble des notes par catégorie (Performance, Batterie, Ecran...)\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Informations techniques (processeur, le gpu, mémoire ram)\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Le prix\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"La date de publication\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Pour plus d'informations sur la récupération des données :  \", _jsx(_components.a, {\n          href: \"https://github.com/mlaajaj/PortfolioProjects/blob/main/Smartphones_scrap.ipynb\",\n          children: \"Voir le Projet\"\n        })]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Modélisation\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"La librairie \", _jsx(_components.a, {\n          href: \"https://pandas.pydata.org\",\n          children: \"Pandas\"\n        }), \" m'a permis de stocker les données obtenues dans des dataframes facilitant leur utilisation et traitement.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-code\",\n          children: \"# Procedure\\n\\nlinks  = get_links(3)\\ndata = []\\n\\nfor link in links[:50]:\\n    try:\\n        soup = get_soup(link)\\n        d = get_data(soup)\\n        data.append(d)\\n    except:\\n        pass\\n\\ncols = get_cols(soup)\\ndf = pd.DataFrame(data, columns=cols)\\ndf.head()\\n\"\n        })\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Streamlit : Passons aux choses sérieuses !\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Données ✅\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Modélisation ✅\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Création de notre application ❌\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Afin de créer notre application avec Streamlit, nous devons installer streamlit via la commande :\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-code\",\n          children: \"pip install streamlit\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"L'\", _jsx(_components.a, {\n          href: \"https://docs.streamlit.io/library/api-reference\",\n          children: \"API\"\n        }), \" de Streamlit est extrêmement riche et nous permet d'afficher pratiquement tout ce que l'on souhaite.\"]\n      }), \"\\n\", _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"Par exemple, pour afficher du texte, on appelera la fonction \", _jsx(_components.code, {\n            children: \"st.write()\"\n          }), \" ou pour afficher un dataframe \", _jsx(_components.code, {\n            children: \"st.dataframe()\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Notre objectif est de créer une application permettant à un utilisateur de comparer deux smartphones.\", _jsx(_components.br, {}), \"\\n\", \"Pour ce faire, l'utilisateur devra choisir :\"]\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Deux smartphones différents.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Des critères de compararaison (au moins 3).\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Enfin, des informations conernant les deux smartphones seront affichées via un dataframe.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.h4, {\n        children: \"1. Le choix des smartphones\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Pour le choix des smartphones, nous allons utiliser la fonction \", _jsx(_components.code, {\n          children: \"st.selectbox()\"\n        }), \". Cette fonction prend en entrée une description et une sequence. Celle-ci peut être un objet de type :\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Sequence\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Numpy.ndarray\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"pandas.Series\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"pandas.DataFrame\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"pandas.Index\\nEn sortie, nous obtenons l'élément choisi par l'utilisateur.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Dans notre cas, nous allons récupérer pour le premier choix, l'ensemble des valeurs uniques pour la colonne 'Marque' ainsi que pour la colonne 'Modele'.\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-code\",\n          children: \"# Selectbox pour la marque\\nmarques = df['Marque'].unique() # L'ensemble des marques\\nmarque1 = st.selectbox(\\\"Marque 1\\\", marques)\\n\\n# Selectbox pour le modele\\n# Nous allons filtrer notre dataframe avec le choix précédent.\\nmodeles = df[df['marque']==m1]['modele'].sort_values().unique()\\nsmartphone1 = st.selectbox(\\\"Smartphone 1\\\", smarphones)\\n\"\n        })\n      }), \"\\n\", _jsx(_components.h4, {\n        children: \"2. Les critères de comparaison\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"En ce qui concerne le choix des critères, nous allons utiliser la fonction \", _jsx(_components.code, {\n          children: \"multiselect()\"\n        }), \". Celle-ci fonctionne similairement à la fonction \", _jsx(_components.code, {\n          children: \"selectbox()\"\n        }), \" mais permet de selectionner plusieurs éléments. L'élement retourné est une liste.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-code\",\n          children: \"# Multiselect()\\ncriteres = sorted(df.columns.to_list()[2:15])\\nselection = st.multiselect(\\\"Quels critères voulez-vous selectionner ?\\\", criteres)\\n\"\n        })\n      }), \"\\n\", _jsx(_components.h4, {\n        children: \"3. Affichage du résultat\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Une des forces de Streamlit c'est également sa communauté grandissante et active et son nombre de \", _jsx(_components.a, {\n          href: \"https://streamlit.io/components\",\n          children: \"composants\"\n        }), \"...\", _jsx(_components.br, {}), \"\\n\", \"Pour afficher la comparaison entre deux smartphones, rien de mieux qu'un graphique de type \\\"radar\\\".\", _jsx(_components.br, {}), \"\\n\", \"Pour se faire, nous allons utiliser le composants \", _jsx(_components.a, {\n          href: \"https://share.streamlit.io/andfanilo/streamlit-echarts-demo/master/app.py\",\n          children: \"st-echarts\"\n        }), \", developpé par \", _jsx(_components.a, {\n          href: \"https://twitter.com/andfanilo\",\n          children: \"Fanilo Andrianasolo\"\n        }), \", qui permet de profiter de la bibliothèque \", _jsx(_components.a, {\n          href: \"https://echarts.apache.org/en/index.html\",\n          children: \"e-charts\"\n        }), \" d'Apache directement sur note application. Rien que ça !\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Déploiement\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"En cours d'écriture\", _jsx(_components.br, {}), \"\\n\", \"Le déploiement de l'application s'est fait via Github.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Pour plus d'informations, \", _jsx(_components.a, {\n          href: \"https://docs.streamlit.io/streamlit-cloud/get-started/deploy-an-app\",\n          children: \"voir la documentation officielle\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Résultat\"\n      }), \"\\n\", _jsx(\"iframe\", {\n        src: \"https://share.streamlit.io/mlaajaj/smartphone_comparison_app/main/app.py\",\n        alt: \"demo\",\n        width: \"100%\",\n        height: \"1080\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"readingTime":"4 min read","title":"Streamlit","description":"Création et déploiement d'une application avec Streamlit","date":"May 25, 2022","slug":"Streamlit"},"__N_SSG":true}